[{"D:\\JSpractice\\instagram-frontend\\src\\index.js":"1","D:\\JSpractice\\instagram-frontend\\src\\Apollo\\Client.js":"2","D:\\JSpractice\\instagram-frontend\\src\\Components\\App.js":"3","D:\\JSpractice\\instagram-frontend\\src\\Apollo\\LocalState.js":"4","D:\\JSpractice\\instagram-frontend\\src\\Styles\\GlobalStyles.js":"5","D:\\JSpractice\\instagram-frontend\\src\\Styles\\Theme.js":"6","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Feed.js":"7","D:\\JSpractice\\instagram-frontend\\src\\Components\\Footer.js":"8","D:\\JSpractice\\instagram-frontend\\src\\Components\\input.js":"9","D:\\JSpractice\\instagram-frontend\\src\\Components\\Button.js":"10","D:\\JSpractice\\instagram-frontend\\src\\Hooks\\useInput.js":"11","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\index.js":"12","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthPresenter.js":"13","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthContainer.js":"14","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthQueries.js":"15","D:\\JSpractice\\instagram-frontend\\src\\Components\\Header.js":"16","D:\\JSpractice\\instagram-frontend\\src\\Components\\Icons.js":"17","D:\\JSpractice\\instagram-frontend\\src\\Components\\Routes.js":"18","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Explore.js":"19","D:\\JSpractice\\instagram-frontend\\src\\Components\\Loader.js":"20","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Post.js":"21","D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\index.js":"22","D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostContainer.js":"23","D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostPresenter.js":"24","D:\\JSpractice\\instagram-frontend\\src\\Components\\Avatar.js":"25","D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostQueries.js":"26","D:\\JSpractice\\instagram-frontend\\src\\SharedQueries.js":"27","D:\\JSpractice\\instagram-frontend\\src\\Components\\FatText.js":"28","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\index.js":"29","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchContainer.js":"30","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchPresenter.js":"31","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchQueries.js":"32","D:\\JSpractice\\instagram-frontend\\src\\Components\\UserPost.js":"33","D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonPresenter.js":"34","D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\index.js":"35","D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonContainer.js":"36","D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonQueries.js":"37","D:\\JSpractice\\instagram-frontend\\src\\Components\\SquarePost.js":"38","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\index.js":"39","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\ProfileContainer.js":"40","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\ProfilePresenter.js":"41"},{"size":322,"mtime":1618121893128,"results":"42","hashOfConfig":"43"},{"size":308,"mtime":1620899242425,"results":"44","hashOfConfig":"43"},{"size":1232,"mtime":1618122970342,"results":"45","hashOfConfig":"43"},{"size":569,"mtime":1608622497638,"results":"46","hashOfConfig":"43"},{"size":524,"mtime":1609848427827,"results":"47","hashOfConfig":"43"},{"size":554,"mtime":1611800062129,"results":"48","hashOfConfig":"43"},{"size":1595,"mtime":1619797164582,"results":"49","hashOfConfig":"43"},{"size":1832,"mtime":1610103237952,"results":"50","hashOfConfig":"43"},{"size":926,"mtime":1609845959751,"results":"51","hashOfConfig":"43"},{"size":594,"mtime":1611799978586,"results":"52","hashOfConfig":"43"},{"size":343,"mtime":1619202575062,"results":"53","hashOfConfig":"43"},{"size":75,"mtime":1608796988513,"results":"54","hashOfConfig":"43"},{"size":3659,"mtime":1618123412987,"results":"55","hashOfConfig":"43"},{"size":3686,"mtime":1620831061928,"results":"56","hashOfConfig":"43"},{"size":842,"mtime":1609306543284,"results":"57","hashOfConfig":"43"},{"size":3523,"mtime":1614937384310,"results":"58","hashOfConfig":"43"},{"size":4521,"mtime":1611576148096,"results":"59","hashOfConfig":"43"},{"size":910,"mtime":1611703017837,"results":"60","hashOfConfig":"43"},{"size":59,"mtime":1609849095048,"results":"61","hashOfConfig":"43"},{"size":462,"mtime":1611535601980,"results":"62","hashOfConfig":"43"},{"size":28,"mtime":1608390969566,"results":"63","hashOfConfig":"43"},{"size":75,"mtime":1611049644482,"results":"64","hashOfConfig":"43"},{"size":3736,"mtime":1619797136919,"results":"65","hashOfConfig":"43"},{"size":8036,"mtime":1619797121913,"results":"66","hashOfConfig":"43"},{"size":877,"mtime":1618668252235,"results":"67","hashOfConfig":"43"},{"size":439,"mtime":1619795132443,"results":"68","hashOfConfig":"43"},{"size":126,"mtime":1611318691325,"results":"69","hashOfConfig":"43"},{"size":366,"mtime":1611318691300,"results":"70","hashOfConfig":"43"},{"size":81,"mtime":1611318691322,"results":"71","hashOfConfig":"43"},{"size":630,"mtime":1611807463743,"results":"72","hashOfConfig":"43"},{"size":2596,"mtime":1611809395868,"results":"73","hashOfConfig":"43"},{"size":432,"mtime":1611808373846,"results":"74","hashOfConfig":"43"},{"size":1139,"mtime":1611552587014,"results":"75","hashOfConfig":"43"},{"size":191,"mtime":1618119648144,"results":"76","hashOfConfig":"43"},{"size":99,"mtime":1611533111181,"results":"77","hashOfConfig":"43"},{"size":1043,"mtime":1611533111179,"results":"78","hashOfConfig":"43"},{"size":243,"mtime":1611533111180,"results":"79","hashOfConfig":"43"},{"size":2217,"mtime":1611811916831,"results":"80","hashOfConfig":"43"},{"size":86,"mtime":1611711674168,"results":"81","hashOfConfig":"43"},{"size":1010,"mtime":1611805485733,"results":"82","hashOfConfig":"43"},{"size":3793,"mtime":1611812118736,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1fxr80",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},"D:\\JSpractice\\instagram-frontend\\src\\index.js",[],["174","175"],"D:\\JSpractice\\instagram-frontend\\src\\Apollo\\Client.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\App.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Apollo\\LocalState.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Styles\\GlobalStyles.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Styles\\Theme.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Feed.js",["176"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Post from \"../Components/Post\";\r\n\r\nconst FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      id\r\n      location\r\n      caption\r\n      user {\r\n        id\r\n        avatar\r\n        userName\r\n      }\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      likeCount\r\n      commentCount\r\n      isLiked\r\n      comments {\r\n        id\r\n        text\r\n        user {\r\n          id\r\n          userName\r\n          avatar\r\n        }\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\n\r\nexport default () => {\r\n  const { data, loading } = useQuery(FEED_QUERY);\r\n  return (\r\n    <Wrapper>\r\n      <Helmet>\r\n        <title>Feed | Instagram</title>\r\n      </Helmet>\r\n      {loading && <Loader />}\r\n      {!loading &&\r\n        data &&\r\n        data.seeFeed &&\r\n        data.seeFeed.map((post) => (\r\n          <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            location={post.location}\r\n            caption={post.caption}\r\n            user={post.user}\r\n            files={post.files}\r\n            likeCount={post.likeCount}\r\n            commentCount={post.commentCount}\r\n            isLiked={post.isLiked}\r\n            comments={post.comments}\r\n            createdAt={post.createdAt}\r\n          />\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n","D:\\JSpractice\\instagram-frontend\\src\\Components\\Footer.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\input.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Button.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Hooks\\useInput.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\index.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthPresenter.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthContainer.js",["177"],"import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  CONFIRM_SECRET,\r\n  CREATE_ACCOUNT,\r\n  LOCAL_LOG_IN,\r\n  LOG_IN,\r\n} from \"./AuthQueries\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AuthContainer = () => {\r\n  const [action, setAction] = useState(\"Login\");\r\n  const userName = useInput(\"\");\r\n  const firstName = useInput(\"\");\r\n  const lastName = useInput(\"\");\r\n  const email = useInput(\"\");\r\n  const secret = useInput(\"\");\r\n\r\n  const [requestSecretMutation] = useMutation(LOG_IN, {\r\n    variables: {\r\n      email: email.value,\r\n    },\r\n  });\r\n  const [createAcountMutation] = useMutation(CREATE_ACCOUNT, {\r\n    variables: {\r\n      email: email.value,\r\n      userName: userName.value,\r\n      firstName: firstName.value,\r\n      lastName: lastName.value,\r\n    },\r\n  });\r\n\r\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n    variables: {\r\n      email: email.value,\r\n      secret: secret.value,\r\n    },\r\n  });\r\n\r\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (action === \"Login\") {\r\n      //로그인 페이지일시\r\n      if (email.value !== \"\") {\r\n        //메일을 작성했다면\r\n        try {\r\n          const {\r\n            data: { requestSecret },\r\n          } = await requestSecretMutation();\r\n          if (!requestSecret) {\r\n            //requestSecret이 없다면\r\n            toast.error(\"없는 계정입니다. 만들어주세요\");\r\n            setTimeout(() => setAction(\"signUp\"), 2000);\r\n          } else {\r\n            //requestSecret 있다면\r\n            toast.success(\"이메일을 확인해주세요\");\r\n            setAction(\"confirm\");\r\n          }\r\n        } catch {\r\n          toast(\"다시 시도해주세요\");\r\n        }\r\n      } else {\r\n        toast.error(\"이메일을 입력해주세요\");\r\n      }\r\n    } else if (action === \"signUp\") {\r\n      //회원가입 페이지일시\r\n      if (\r\n        email.value !== \"\" &&\r\n        userName.value !== \"\" &&\r\n        firstName.value !== \"\" &&\r\n        lastName.value !== \"\"\r\n      ) {\r\n        //회원가입 양식을 모두 작성했다면\r\n        try {\r\n          const {\r\n            data: { createAcount },\r\n          } = await createAcountMutation();\r\n          if (!createAcount) {\r\n            toast.error(\"회원가입을 할수 없습니다\");\r\n          } else {\r\n            toast.success(\"축하합니다. 가입완료되었습니다\");\r\n            setTimeout(() => setAction(\"Login\"), 2000);\r\n          }\r\n        } catch (e) {\r\n          toast.error(e.message);\r\n        }\r\n      } else {\r\n        toast.error(\"모든 항목을 입력해주세요\");\r\n      }\r\n    } else if (action === \"confirm\") {\r\n      //확인 페이지 일시\r\n      if (secret.value !== \"\") {\r\n        try {\r\n          const {\r\n            data: { confirmSecret: token },\r\n          } = await confirmSecretMutation();\r\n          if (token !== \"\" && token !== undefined) {\r\n            localLogInMutation({ variables: { token } });\r\n          } else {\r\n            throw Error();\r\n          }\r\n        } catch {\r\n          toast.error(\"비밀번호를 찾을 수 없습니다\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPresenter\r\n      setAction={setAction}\r\n      action={action}\r\n      userName={userName}\r\n      firstName={firstName}\r\n      lastName={lastName}\r\n      email={email}\r\n      secret={secret}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthContainer;\r\n","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Auth\\AuthQueries.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Header.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Icons.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Routes.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Explore.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Loader.js",["178"],"import React from  \"react\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport { Logo } from \"./Icons\";\r\n\r\nconst Animation = keyframes`\r\n    0% {\r\n        opacity: 0\r\n    }50% {\r\n        opacity: 1\r\n    }100% {\r\n        opacity:0;\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    animation: ${Animation} 1s linear infinite;\r\n    width: 100%;\r\n    text-align:center;\r\n`;\r\n\r\nexport default () => (\r\n    <Loader>\r\n        <Logo size={36}/>\r\n    </Loader>\r\n)","D:\\JSpractice\\instagram-frontend\\src\\Routes\\Post.js",["179"],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\index.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostContainer.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostPresenter.js",["180","181"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HeartEmpty, HeartFull, CommentIcon, Airplane } from \"../Icons\";\r\nimport FatText from \"../FatText\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Modal from \"react-modal\";\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Post = styled.div`\r\n  ${(props) => props.theme.whiteBox}\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 60px;\r\n  user-select: none;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  padding: 15px;\r\n  display: flex;\r\n`; //Post Header부분\r\nconst UserColumn = styled.div`\r\n  margin-left: 10px;\r\n`; //name, lacation 부분\r\nconst Location = styled.div`\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n`; //Location\r\nconst File = styled.div`\r\n  padding-bottom: 100%;\r\n  background-image: url(${(props) => props.src});\r\n  background-size: cover;\r\n  background-position: center;\r\n`; //파일\r\nconst ModalOpen = styled.span`\r\n  margin-top: 10px;\r\n  font-weight: 400;\r\n  opacity: 0.5;\r\n  cursor: pointer;\r\n`;\r\nconst Button = styled.span`\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\nconst Meta = styled.div`\r\n  padding: 15px;\r\n`;\r\nconst Buttons = styled.div`\r\n  ${Button} {\r\n    &:first-child {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  margin-bottom: 10px;\r\n`; //버튼들\r\nconst Timestamp = styled.span`\r\n  font-weight: 300;\r\n  text-transform: uppercase;\r\n  opacity: 0.5;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 10px 0px;\r\n  padding-bottom: 10px;\r\n  border-bottom: #b2b2b2 1px solid;\r\n`; //작성 시간\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  border: none;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst Comments = styled.ul`\r\n  margin-top: 10px;\r\n`;\r\nconst Comment = styled.li`\r\n  margin-bottom: 7px;\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Caption = styled.div`\r\n  margin: 10px 0px;\r\n`;\r\nconst CountText = styled.div`\r\n  margin: 10px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ModalContainer = styled.div`\r\n  display: flex;\r\n`;\r\nconst ModalFile = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 100%;\r\n`;\r\nconst ModalContent = styled.div`\r\n  width: 40%;\r\n  list-style: none;\r\n  padding: 10px;\r\n  margin-left: 15px;\r\n`;\r\nconst ModalAvatar = styled.div`\r\n  display: flxed;\r\n  padding-bottom: 20px;\r\n  border-bottom: #b2b2b2 1px solid;\r\n`;\r\nconst ModalComment = styled.li`\r\n  margin: 15px 0px 40px 0px;\r\n  span {\r\n    margin-right: 10px;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst ModalComments = styled.div`\r\n  overflow: scroll;\r\n  height: 600px;\r\n  width: 330px;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nconst Forspacing = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NextArrow = (props) => {\r\n  //사진 넘기기\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", paddingRight: \"60px\", zIndex: \"1\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n};\r\n\r\nconst PrevArrow = (props) => {\r\n  //사진 뒤로\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", paddingLeft: \"40px\", zIndex: \"1\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  //Slider setting\r\n  dots: true,\r\n  infinite: false,\r\n  fade: true,\r\n  speed: 500,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PrevArrow />,\r\n};\r\n\r\nexport default ({\r\n  user: { userName, avatar },\r\n  location,\r\n  files,\r\n  isLiked,\r\n  likeCount,\r\n  commentCount,\r\n  createdAt,\r\n  newComment,\r\n  toggleLike,\r\n  onKeyPress,\r\n  comments,\r\n  newComments,\r\n  caption,\r\n  modalChange,\r\n  modalOpen,\r\n  modalClose,\r\n}) => (\r\n  <Post>\r\n    <Header>\r\n      {\" \"}\r\n      {/* 프로필 */}\r\n      <Avatar size=\"sm\" url={avatar} />\r\n      <UserColumn>\r\n        <Link to={`/${userName}`}>\r\n          <FatText text={userName} />\r\n        </Link>\r\n        <Location>{location}</Location>\r\n      </UserColumn>\r\n    </Header>\r\n\r\n    <Slider {...settings}>\r\n      {\" \"}\r\n      {/* 사진 */}\r\n      {files && files.map((file) => <File key={file.id} src={file.url} />)}\r\n    </Slider>\r\n\r\n    <Meta>\r\n      {\" \"}\r\n      {/* 내용 */}\r\n      <Buttons>\r\n        {\" \"}\r\n        {/* 좋아요,댓글,공유 */}\r\n        <Button onClick={toggleLike}>\r\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n        </Button>\r\n        <Button onClick={modalChange}>\r\n          <CommentIcon />\r\n        </Button>\r\n        <Button>\r\n          <Airplane />\r\n        </Button>\r\n      </Buttons>\r\n      <CountText>\r\n        {\" \"}\r\n        {/* 좋아요수, 댓글모두보기 */}\r\n        <FatText text={`좋아요 ${likeCount}개`} />\r\n        <ModalOpen onClick={modalChange}>\r\n          {`댓글${commentCount}개 모두보기`}\r\n        </ModalOpen>\r\n        <Modal //모달창\r\n          isOpen={modalOpen}\r\n          onRequestClose={modalClose}\r\n          style={{\r\n            overlay: { backgroundColor: \"rgba(0, 0, 0, 0.8)\" },\r\n            content: {\r\n              top: \"18%\",\r\n              left: \"25%\",\r\n              width: \"50%\",\r\n              height: \"60%\",\r\n              padding: \"0px\",\r\n              maxHeight: \"650px\",\r\n              overflow: \"hidden\",\r\n            },\r\n          }}\r\n        >\r\n          <ModalContainer>\r\n            <ModalFile>\r\n              {\" \"}\r\n              {/* 모달사진 */}\r\n              <Slider {...settings}>\r\n                {files &&\r\n                  files.map((file) => <File key={file.id} src={file.url} />)}\r\n              </Slider>\r\n            </ModalFile>\r\n            <ModalContent>\r\n              {\" \"}\r\n              {/* 모달내용 */}\r\n              <ModalAvatar>\r\n                {\" \"}\r\n                {/* 모달내용/헤더 */}\r\n                <Avatar size=\"sm\" url={avatar} />\r\n                <UserColumn>\r\n                  <Link to={`/${userName}`}>\r\n                    <FatText text={userName} />\r\n                  </Link>\r\n                  <Location>{location}</Location>\r\n                </UserColumn>\r\n              </ModalAvatar>\r\n              <ModalComments>\r\n                {\" \"}\r\n                {/* 모달내용/댓글 */}\r\n                {comments.map((comment) => (\r\n                  <ModalComment key={comment.id}>\r\n                    <Forspacing>\r\n                      <Avatar size=\"sm\" url={comment.user.avatar} />\r\n                    </Forspacing>\r\n                    <FatText text={comment.user.userName} />\r\n                    {comment.text}\r\n                  </ModalComment>\r\n                ))}\r\n              </ModalComments>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      </CountText>\r\n      <Caption>\r\n        {\" \"}\r\n        {/* 포스트내용 */}\r\n        <FatText text={userName} /> {caption}\r\n      </Caption>\r\n      {comments && ( //댓글(최신댓글 1개만 Open)\r\n        <Comments>\r\n          {comments.length > 2 ? (\r\n            <Comment key={comments[comments.length - 1].id}>\r\n              <FatText text={comments[comments.length - 1].user.userName} />\r\n              {comments[comments.length - 1].text}\r\n            </Comment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {newComments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <FatText text={comment.user.userName} />\r\n              {comment.text}\r\n            </Comment>\r\n          ))}\r\n        </Comments>\r\n      )}\r\n      <Timestamp>{createdAt}</Timestamp>\r\n      <Textarea //댓글달기\r\n        onKeyPress={onKeyPress}\r\n        placeholder={\"댓글 달기\"}\r\n        value={newComment.value}\r\n        onChange={newComment.onChange}\r\n      />\r\n    </Meta>\r\n  </Post>\r\n);\r\n","D:\\JSpractice\\instagram-frontend\\src\\Components\\Avatar.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\Post\\PostQueries.js",[],"D:\\JSpractice\\instagram-frontend\\src\\SharedQueries.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\FatText.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\index.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchContainer.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchPresenter.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Search\\SearchQueries.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\UserPost.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonPresenter.js",["182"],"import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nexport default ({isFollowing, onClick}) => (\r\n    <Button text={isFollowing ? \"팔로우\" : \"팔로잉\"} onClick={onClick}/>\r\n);","D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\index.js",[],["183","184"],"D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonContainer.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\FollowButton\\FollowButtonQueries.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Components\\SquarePost.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\index.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\ProfileContainer.js",[],"D:\\JSpractice\\instagram-frontend\\src\\Routes\\Profile\\ProfilePresenter.js",["185"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Avatar from \"../../Components/Avatar\";\r\nimport FatText from \"../../Components/FatText\";\r\nimport FollowButton from \"../../Components/FollowButton/FollowButtonContainer\";\r\nimport {SquarePost} from \"../../Components/SquarePost\"; \r\nconst Wrapper = styled.div`\r\n    margin-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-bottom: 100px;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst HeaderColumn =styled.div`\r\n    &:not(:last-child){\r\n        margin-right: 110px;\r\n    }\r\n`;\r\n\r\nconst UserNameRow =styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst UserName = styled.span`\r\n    font-size: 27px;\r\n    margin-right: 30px;\r\n`;\r\n\r\nconst Counts = styled.ul`\r\n    display: flex;\r\n    margin: 18px 0px;\r\n`;\r\n\r\nconst Count =styled.li`\r\n    font-size: 16px;\r\n    &:not(:last-child){\r\n        margin-right: 70px;\r\n    }\r\n`;\r\n\r\nconst FullName = styled(FatText)`\r\n    font-size: 17px;\r\n`;\r\n\r\nconst Bio = styled.p`\r\n    margin: 10px 0px;\r\n`;\r\n\r\nconst Posts = styled.div`\r\nwidth: 100%;\r\ndisplay: grid;\r\ngrid-gap: 30px;\r\ngrid-template-columns: repeat(3, 294px);\r\ngrid-template-rows: 294px;\r\ngrid-auto-rows: 294px;\r\nborder-top: 1px solid rgba(var(--b38,219,219,219),1);\r\npadding-top: 53px;\r\n`;\r\n\r\n\r\nexport default ({loading, data}) => {\r\n    if(loading){\r\n        return (\r\n            <Wrapper>\r\n                <Loader />\r\n            </Wrapper>\r\n        );\r\n    }else if(!loading && data && data.seeUser){\r\n        console.log(data.seeUser.posts);\r\n        const {\r\n            seeUser: {\r\n                id,\r\n                avatar,\r\n                userName,\r\n                fullName,\r\n                isFollowing,\r\n                isSelf,\r\n                bio,\r\n                followingCount,\r\n                followersCount,\r\n                postsCount,\r\n                posts\r\n            }\r\n        } = data;\r\n        return (\r\n            <Wrapper>\r\n            <Helmet>\r\n                <title>\r\n                    {userName}(@{fullName})  \r\n                </title>\r\n            </Helmet>\r\n                <Header>\r\n                    <HeaderColumn>\r\n                        <Avatar size=\"lg\" url={avatar}/>\r\n                    </HeaderColumn>\r\n                    <HeaderColumn>\r\n                        <UserNameRow>\r\n                            <UserName>{userName}</UserName>\r\n                            {!isSelf && <FollowButton id={id} isFollowing={isFollowing}/>}\r\n                        </UserNameRow>\r\n                        <Counts>\r\n                            <Count>\r\n                            게시물 <FatText text={postsCount}/> \r\n                            </Count>\r\n                            <Count>\r\n                            팔로워 <FatText text={followersCount}/>\r\n                            </Count>\r\n                            <Count>\r\n                            팔로우 <FatText text={followingCount}/>\r\n                            </Count>\r\n                        </Counts>\r\n                        <FullName text= {fullName}/>\r\n                        <Bio>{bio}</Bio>\r\n                    </HeaderColumn>\r\n                </Header>\r\n                <Posts>\r\n                    {posts && posts.map(post => (\r\n                        <SquarePost\r\n                            key={post.id}\r\n                            likeCount={post.likeCount}\r\n                            commentCount={post.commentCount}\r\n                            files={post.files[0]}\r\n                        />\r\n                    ))}\r\n                </Posts>\r\n            </Wrapper>\r\n        );\r\n    }\r\n    return null;\r\n}",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":48,"column":1,"nodeType":"192","endLine":76,"endColumn":3},{"ruleId":"193","severity":1,"message":"194","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":21,"column":1,"nodeType":"192","endLine":25,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":1,"column":1,"nodeType":"192","endLine":1,"endColumn":29},{"ruleId":"193","severity":1,"message":"197","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":177,"column":1,"nodeType":"192","endLine":325,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":4,"column":1,"nodeType":"192","endLine":6,"endColumn":3},{"ruleId":"186","replacedBy":"198"},{"ruleId":"188","replacedBy":"199"},{"ruleId":"190","severity":1,"message":"191","line":69,"column":1,"nodeType":"192","endLine":138,"endColumn":2},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["200"],["201"],"no-global-assign","no-unsafe-negation"]